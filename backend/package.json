{
  "name": "backend",
  "version": "0.1.0",
  "private": true,
  "description": "A Strapi application",
  "scripts": {
    "build": "strapi build",
    "console": "strapi console",
    "deploy": "bash scripts/deploy.sh",
    "dev": "strapi develop",
    "develop": "strapi develop",
    "start": "strapi start",
    "strapi": "strapi",
    "upgrade": "npx @strapi/upgrade latest",
    "upgrade:dry": "npx @strapi/upgrade latest --dry",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest tests/unit",
    "test:integration": "jest tests/integration",
    "test:performance": "npx playwright test tests/deployment/performance-load-validation.test.js",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:performance",
    "validate:data": "node scripts/validate-data-consistency.js",
    "validate:scheduled": "node scripts/scheduled-data-check.js",
    "validate:report": "node scripts/scheduled-data-check.js --report",
    "test:data-integrity": "jest tests/integration/api/data-consistency-simple.test.ts tests/unit/services/data-integrity.test.ts",
    "setup:test-data": "node scripts/setup-test-data.js",
    "debug:validation": "DEBUG=strapi:validation npm run develop",
    "check:api": "curl -f http://localhost:1337/api/clubs || echo 'API not responding'",
    "check:db": "node -e \"const {Client} = require('pg'); const client = new Client(process.env.DATABASE_URL || {host: process.env.DATABASE_HOST, database: process.env.DATABASE_NAME, user: process.env.DATABASE_USERNAME, password: process.env.DATABASE_PASSWORD}); client.connect().then(() => client.query('SELECT 1')).then(() => {console.log('Database OK'); process.exit(0);}).catch(err => {console.error('Database Error:', err.message); process.exit(1);});\"",
    "reset:db": "rm -f .tmp/data.db && npm run develop",
    "logs:validation": "tail -f logs/strapi.log | grep -i validation",
    "migrate": "node scripts/migration-runner.js migrate",
    "migrate:rollback": "node scripts/migration-runner.js rollback",
    "migrate:status": "node scripts/migration-runner.js status",
    "migrate:validate": "node scripts/migration-runner.js validate",
    "deploy:staging": "NODE_ENV=staging bash scripts/deploy.sh staging",
    "deploy:production": "NODE_ENV=production bash scripts/deploy.sh production",
    "deploy:zero-downtime": "node scripts/zero-downtime-deploy.js deploy",
    "deploy:rollback": "node scripts/zero-downtime-deploy.js rollback",
    "deploy:status": "node scripts/zero-downtime-deploy.js status",
    "deploy:verify": "node scripts/deployment-verification.js",
    "deploy:orchestrate": "node scripts/deployment/deployment-orchestrator.js",
    "deploy:orchestrate:staging": "node scripts/deployment/deployment-orchestrator.js --environment=staging --strategy=gradual --rollout-percentage=50",
    "deploy:orchestrate:production": "node scripts/deployment/deployment-orchestrator.js --environment=production --strategy=canary --rollout-percentage=10",
    "deploy:feature-flags": "node scripts/deployment/feature-flag-manager.js",
    "deploy:db-migrate": "node scripts/deployment/database-migration-runner.js migrate",
    "deploy:db-rollback": "node scripts/deployment/database-migration-runner.js rollback",
    "deploy:db-status": "node scripts/deployment/database-migration-runner.js status",
    "deploy:env-config": "node scripts/deployment/environment-configs.js generate",
    "rollout:monitor": "node scripts/deployment/rollout-monitor.js start",
    "rollout:monitor:auto": "node scripts/deployment/rollout-monitor.js start --auto-rollback",
    "rollout:report": "node scripts/deployment/rollout-monitor.js report",
    "rollback:feature": "node scripts/deployment/rollback-procedures.js --type=feature",
    "rollback:partial": "node scripts/deployment/rollback-procedures.js --type=partial",
    "rollback:full": "node scripts/deployment/rollback-procedures.js --type=full",
    "rollback:emergency": "node scripts/deployment/rollback-procedures.js --type=full --force=true",
    "validate:comprehensive": "node scripts/deployment/comprehensive-validation-runner.js",
    "validate:comprehensive:staging": "node scripts/deployment/comprehensive-validation-runner.js --environment=staging",
    "validate:comprehensive:production": "node scripts/deployment/comprehensive-validation-runner.js --environment=production --skip-load",
    "validate:performance": "npm run test:performance",
    "validate:load": "node scripts/deployment/comprehensive-validation-runner.js --skip-integration --skip-workflow",
    "test:smoke": "npm run test:unit -- --testPathPattern=smoke",
    "test:critical": "npm run test:unit -- --testPathPattern=critical",
    "data:validate": "node scripts/validate-existing-data.js",
    "data:repair": "node scripts/data-consistency-repair.js",
    "data:repair:dry-run": "node scripts/data-consistency-repair.js --dry-run",
    "data:migrate-to-automation": "node scripts/migrate-to-automation.js",
    "data:report": "node scripts/generate-validation-report.js",
    "test:e2e": "jest --config jest.e2e.config.js --forceExit --detectOpenHandles",
    "test:e2e:watch": "jest --config jest.e2e.config.js --watch",
    "test:e2e:coverage": "jest --config jest.e2e.config.js --coverage --forceExit --detectOpenHandles",
    "test:e2e:ci": "jest --config jest.e2e.config.js --ci --coverage --watchAll=false --forceExit --detectOpenHandles",
    "test:e2e:run": "node scripts/run-e2e-tests.js",
    "ops:maintenance": "node scripts/club-maintenance.js",
    "ops:maintenance:orphaned": "node scripts/club-maintenance.js orphaned",
    "ops:maintenance:duplicates": "node scripts/club-maintenance.js duplicates",
    "ops:maintenance:validate": "node scripts/club-maintenance.js validate",
    "ops:maintenance:cleanup": "node scripts/club-maintenance.js cleanup",
    "ops:maintenance:optimize": "node scripts/club-maintenance.js optimize",
    "ops:backup:full": "node scripts/club-backup-restore.js full",
    "ops:backup:incremental": "node scripts/club-backup-restore.js incremental",
    "ops:backup:list": "node scripts/club-backup-restore.js list",
    "ops:backup:cleanup": "node scripts/club-backup-restore.js cleanup",
    "ops:restore": "node scripts/club-backup-restore.js restore",
    "ops:diagnostics": "node scripts/club-diagnostics.js",
    "ops:diagnostics:database": "node scripts/club-diagnostics.js database",
    "ops:diagnostics:data": "node scripts/club-diagnostics.js data",
    "ops:diagnostics:performance": "node scripts/club-diagnostics.js performance",
    "ops:diagnostics:cache": "node scripts/club-diagnostics.js cache",
    "ops:diagnostics:monitoring": "node scripts/club-diagnostics.js monitoring",
    "ops:diagnostics:filesystem": "node scripts/club-diagnostics.js filesystem",
    "ops:health:start": "node scripts/club-health-check.js start",
    "ops:health:check": "node scripts/club-health-check.js check",
    "ops:health:deep": "node scripts/club-health-check.js deep",
    "ops:health:status": "node scripts/club-health-check.js status",
    "test:ops": "jest tests/operational-tooling.test.js"
  },
  "dependencies": {
    "@_sh/strapi-plugin-ckeditor": "^6.0.2",
    "@strapi/plugin-cloud": "5.18.1",
    "@strapi/plugin-users-permissions": "5.18.1",
    "@strapi/strapi": "5.18.1",
    "axios": "^1.11.0",
    "better-sqlite3": "11.3.0",
    "ioredis": "^5.6.1",
    "node-cron": "^3.0.3",
    "node-fetch": "^2.7.0",
    "pg": "^8.16.3",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.0.0",
    "styled-components": "^6.0.0"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/jest": "^30.0.0",
    "@types/koa": "^2.15.0",
    "@types/node": "^20",
    "@types/pg": "^8.15.4",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/socket.io": "^3.0.2",
    "@types/supertest": "^6.0.3",
    "chalk": "^4.1.2",
    "cli-table3": "^0.6.3",
    "commander": "^9.4.1",
    "inquirer": "^8.2.5",
    "jest": "^30.0.5",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "ora": "^5.4.1",
    "socket.io": "^4.7.5",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.0",
    "typescript": "^5"
  },
  "engines": {
    "node": ">=18.0.0 <=22.x.x",
    "npm": ">=6.0.0"
  },
  "strapi": {
    "uuid": "1d698149-7b91-4ce6-8e94-f333b56be276",
    "installId": "3d76efab452cb98956d53a44c780224629dcd4dde1308f49d7b3131095231646"
  }
}
